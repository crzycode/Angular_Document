import { Directive, ElementRef, HostListener } from '@angular/core';

@Directive({
  selector: '[appDraggable]'
})
export class DraggableDirective {

  private offsetX: number;
  private offsetY: number;

  constructor(private elementRef: ElementRef) { }

  @HostListener('mousedown', ['$event'])
  onMouseDown(event: MouseEvent) {
    event.preventDefault();
    this.offsetX = event.clientX - this.elementRef.nativeElement.getBoundingClientRect().left;
    this.offsetY = event.clientY - this.elementRef.nativeElement.getBoundingClientRect().top;
    
    document.addEventListener('mousemove', this.onMouseMove.bind(this));
    document.addEventListener('mouseup', this.onMouseUp.bind(this));
  }

  onMouseMove(event: MouseEvent) {
    event.preventDefault();
    this.elementRef.nativeElement.style.left = (event.clientX - this.offsetX) + 'px';
    this.elementRef.nativeElement.style.top = (event.clientY - this.offsetY) + 'px';
  }

  onMouseUp(event: MouseEvent) {
    event.preventDefault();
    document.removeEventListener('mousemove', this.onMouseMove.bind(this));
    document.removeEventListener('mouseup', this.onMouseUp.bind(this));
  }
}
